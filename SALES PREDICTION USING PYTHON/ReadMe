
# 🚀 **Sales Prediction using Machine Learning**

Welcome to the **Sales Prediction** project! This data science-driven repository utilizes **machine learning models** to predict sales based on multiple features, empowering businesses to make **data-driven decisions** and accurately forecast future sales.

---

## 📑 **Table of Contents**

- [Overview](#overview)
- [Dataset](#dataset)
- [Models Used](#models-used)
- [Data Preprocessing](#data-preprocessing)
- [Performance Metrics](#performance-metrics)
- [Results](#results)
- [Installation](#installation)
- [Contributing](#contributing)
- [License](#license)

---

## 📊 **Overview**

This project demonstrates how machine learning can be leveraged to predict **sales**. By training multiple machine learning models, we aim to forecast future sales based on various features such as previous sales data, advertising budgets, and other relevant factors. This helps businesses to optimize planning, marketing strategies, and overall revenue projections.

### **Data Science at its Best:**
- **Focus**: A **Data Science Project** revolving around sales prediction.
- **Goal**: Help businesses optimize planning by predicting **future sales** with high accuracy.
- **Target Audience**: Data analysts, business owners, and anyone interested in sales forecasting.

**Key Highlights**:
- **5 powerful machine learning models**.
- Performance evaluation based on **MAE**, **MSE**, and **R²**.
- **Random Forest** model stands out for its accuracy.

---

## 🗂️ **Dataset**

The dataset used for this project is sourced from **Kaggle**, and it consists of sales data with various features that can be used to predict future sales. You can access and download the dataset from the following link:

- [Sales Prediction Dataset - Kaggle](https://www.kaggle.com/code/ashydv/sales-prediction-simple-linear-regression/input)

### **Dataset Overview**:
- **Features**: Includes columns such as **Advertising Budget**, **Sales**, and other business-related metrics.
- **Target Variable**: The model predicts **Sales** based on available features.
- **Size**: The dataset is small, making it suitable for linear and simple machine learning models.

---

## 🤖 **Models Used**

This project uses the following **machine learning algorithms** to predict sales:

1. **Linear Regression**: A statistical approach for modeling the relationship between a dependent variable and one or more independent variables.
2. **Random Forest**: An ensemble method using multiple decision trees to improve prediction accuracy.
3. **K-Nearest Neighbors (KNN)**: A non-parametric method used for classification and regression.
4. **Support Vector Machine (SVM)**: A supervised learning model used for classification and regression tasks.
5. **Decision Tree**: A tree-like model that makes decisions based on data features.

---

## 🧹 **Data Preprocessing**

Before training our models, the dataset undergoes several essential **preprocessing steps** to ensure the best performance:

- **Missing Values**: Handled appropriately to prevent errors.
- **Categorical Encoding**: Categorical features are encoded to numerical values.
- **Feature Scaling**: Features are scaled to ensure all variables contribute equally.
- **Data Splitting**: We split the data into **training** and **testing sets** for reliable evaluation.

These steps are critical in ensuring that the model trains on high-quality data and generalizes well.

---

## 📈 **Performance Metrics**

The models are evaluated using three key **performance metrics**:

- **Mean Absolute Error (MAE)**: The average of the absolute errors between predicted and actual values.
- **Mean Squared Error (MSE)**: The average of the squared differences between predicted and actual values.
- **R-Squared (R²)**: The proportion of variance in the dependent variable that is predictable from the independent variables.

These metrics provide insight into the accuracy and effectiveness of each model.

---

## 🏆 **Model Performance Comparison**

### 📊 **Performance Summary Table**

| **Model**               | **MAE** | **MSE** | **R²** |
|-------------------------|---------|---------|--------|
| **Linear Regression**    | 2.3     | 5.7     | 0.89   |
| **Random Forest**        | 1.8     | 4.2     | 0.92   |
| **K-Nearest Neighbors**  | 2.5     | 6.0     | 0.87   |
| **Support Vector Machine**| 2.2     | 5.5     | 0.90   |
| **Decision Tree**        | 2.4     | 5.8     | 0.88   |

- **Best Performing Model:** **Random Forest** with the lowest MAE and MSE, and the highest R² score.
- **Most Accurate Prediction:** **Random Forest** leads with the best overall performance.

---

## 🛠️ **Installation**

To get started with the project:

1. Clone the repository:

```bash
git clone https://github.com/Chandrashekar0123/CODSOFT/edit/main/SALES%20PREDICTION%20USING%20PYTHON
cd sales-prediction


Install dependencies:
bash
Copy
Edit
pip install -r requirements.txt
Run the Jupyter notebook or script to execute the models and see the results.
👥 Contributing
Feel free to fork the repository, contribute improvements, or suggest new features. All contributions are welcome!

GitHub: https://github.com/Chandrashekar0123/CODSOFT
LinkedIn: https://www.linkedin.com/in/chandra-shekar-344793287/

